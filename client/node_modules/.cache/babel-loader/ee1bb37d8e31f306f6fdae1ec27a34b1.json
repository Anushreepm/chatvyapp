{"ast":null,"code":"import _objectSpread from\"E:\\\\project\\\\chat App\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:\\\\project\\\\chat App\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import jwt from\"jsonwebtoken\";import Layout from\"./Layout\";import axios from\"axios\";import{ToastContainer,toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";var Reset=function Reset(_ref){var match=_ref.match;// props.match from react router dom\nvar _useState=useState({name:\"\",token:\"\",newPassword:\"\",buttonText:\"Reset password\"}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];useEffect(function(){var token=match.params.token;var _jwt$decode=jwt.decode(token),name=_jwt$decode.name;// console.log(name);\nif(token){setValues(function(v){return _objectSpread(_objectSpread({},v),{},{name:name,token:token});});}},[match.params.token]);var name=values.name,token=values.token,newPassword=values.newPassword,buttonText=values.buttonText;var handleChange=function handleChange(event){setValues(_objectSpread(_objectSpread({},values),{},{newPassword:event.target.value}));};var clickSubmit=function clickSubmit(event){event.preventDefault();setValues(_objectSpread(_objectSpread({},values),{},{buttonText:\"Submitting\"}));axios.post(\"/auth/reset-password\",{newPassword:newPassword,resetPasswordLink:token}).then(function(response){console.log(\"RESET PASSWORD SUCCESS\",response);toast.success(response.data.message);setValues(_objectSpread(_objectSpread({},values),{},{buttonText:\"Done\"}));}).catch(function(error){console.log(\"RESET PASSWORD ERROR\",error.response.data);toast.error(error.response.data.error);setValues(_objectSpread(_objectSpread({},values),{},{buttonText:\"Reset password\"}));});};var passwordResetForm=function passwordResetForm(){return/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{className:\"text-muted\"},\"New Password\"),/*#__PURE__*/React.createElement(\"input\",{onChange:handleChange,value:newPassword,type:\"password\",className:\"form-control\",placeholder:\"Type new password\",required:true})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",onClick:clickSubmit},buttonText)));};return/*#__PURE__*/React.createElement(\"div\",{className:\"login-page\"},/*#__PURE__*/React.createElement(ToastContainer,null),/*#__PURE__*/React.createElement(\"h1\",{className:\"p-5 text-center\"},\"Hey \",name,\", Type your new password\"),passwordResetForm());};export default Reset;","map":{"version":3,"sources":["E:/project/chat App/client/src/components/loginsignup/ResetPassword.js"],"names":["React","useState","useEffect","jwt","Layout","axios","ToastContainer","toast","Reset","match","name","token","newPassword","buttonText","values","setValues","params","decode","v","handleChange","event","target","value","clickSubmit","preventDefault","post","resetPasswordLink","then","response","console","log","success","data","message","catch","error","passwordResetForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport Layout from \"./Layout\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Reset = ({ match }) => {\r\n  // props.match from react router dom\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    token: \"\",\r\n    newPassword: \"\",\r\n    buttonText: \"Reset password\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    let token = match.params.token;\r\n    let { name } = jwt.decode(token);\r\n    // console.log(name);\r\n    if (token) {\r\n      setValues((v) => ({ ...v, name, token }));\r\n    }\r\n  }, [match.params.token]);\r\n\r\n  const { name, token, newPassword, buttonText } = values;\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, newPassword: event.target.value });\r\n  };\r\n\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, buttonText: \"Submitting\" });\r\n    axios\r\n      .post(\"/auth/reset-password\", { newPassword, resetPasswordLink: token })\r\n      .then((response) => {\r\n        console.log(\"RESET PASSWORD SUCCESS\", response);\r\n        toast.success(response.data.message);\r\n        setValues({ ...values, buttonText: \"Done\" });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"RESET PASSWORD ERROR\", error.response.data);\r\n        toast.error(error.response.data.error);\r\n        setValues({ ...values, buttonText: \"Reset password\" });\r\n      });\r\n  };\r\n\r\n  const passwordResetForm = () => (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">New Password</label>\r\n        <input\r\n          onChange={handleChange}\r\n          value={newPassword}\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          placeholder=\"Type new password\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <button className=\"btn btn-primary\" onClick={clickSubmit}>\r\n          {buttonText}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n      <div className=\"login-page\">\r\n\r\n        <ToastContainer />\r\n        <h1 className=\"p-5 text-center\">Hey {name}, Type your new password</h1>\r\n        {passwordResetForm()}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n"]},"metadata":{},"sourceType":"module"}