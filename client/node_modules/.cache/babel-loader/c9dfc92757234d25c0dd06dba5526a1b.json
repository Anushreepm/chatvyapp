{"ast":null,"code":"import cookie from\"js-cookie\";// set in cookie\nexport var setCookie=function setCookie(key,value){if(window!==\"undefined\"){cookie.set(key,value,{expires:1});}};// remove from cookie\nexport var removeCookie=function removeCookie(key){if(window!==\"undefined\"){cookie.remove(key,{expires:1});}};// get from cookie such as stored token\n// will be useful when we need to make request to server with token\nexport var getCookie=function getCookie(key){if(window!==\"undefined\"){return cookie.get(key);}};// set in localstorage\nexport var setLocalStorage=function setLocalStorage(key,value){if(window!==\"undefined\"){localStorage.setItem(key,JSON.stringify(value));}};// remove from localstorage\nexport var removeLocalStorage=function removeLocalStorage(key){if(window!==\"undefined\"){localStorage.removeItem(key);}};// authenticate user by passing data to cookie and localstorage during signin\n// next is the callback function. You can pass any function to be executed\nexport var authenticate=function authenticate(response,next){console.log(\"AUTHENTICATE HELPER ON SIGNIN RESPONSE\",response);setCookie(\"token\",response.data.token);setLocalStorage(\"user\",response.data.user);next();};// access user info from localstorage\nexport var isAuth=function isAuth(){if(window!==\"undefined\"){var cookieChecked=getCookie(\"token\");if(cookieChecked){if(localStorage.getItem(\"user\")){return JSON.parse(localStorage.getItem(\"user\"));}return false;}return false;}};// next is the callback function. You can pass any function to be executed\nexport var signout=function signout(next){removeCookie(\"token\");removeLocalStorage(\"user\");next();};export var updateUser=function updateUser(response,next){console.log(\"UPDATE USER IN LOCALSTORAGE HELPERS\",response);if(typeof window!==\"undefined\"){var auth=JSON.parse(localStorage.getItem(\"user\"));auth=response.data;localStorage.setItem(\"user\",JSON.stringify(auth));}next();};","map":{"version":3,"sources":["E:/project/chat App/client/src/components/loginsignup/utils/helper.js"],"names":["cookie","setCookie","key","value","window","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","JSON","stringify","removeLocalStorage","removeItem","authenticate","response","next","console","log","data","token","user","isAuth","cookieChecked","getItem","parse","signout","updateUser","auth"],"mappings":"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","sourcesContent":["import cookie from \"js-cookie\";\r\n\r\n// set in cookie\r\nexport const setCookie = (key, value) => {\r\n  if (window !== \"undefined\") {\r\n    cookie.set(key, value, {\r\n      expires: 1,\r\n    });\r\n  }\r\n};\r\n// remove from cookie\r\nexport const removeCookie = (key) => {\r\n  if (window !== \"undefined\") {\r\n    cookie.remove(key, {\r\n      expires: 1,\r\n    });\r\n  }\r\n};\r\n// get from cookie such as stored token\r\n// will be useful when we need to make request to server with token\r\nexport const getCookie = (key) => {\r\n  if (window !== \"undefined\") {\r\n    return cookie.get(key);\r\n  }\r\n};\r\n// set in localstorage\r\nexport const setLocalStorage = (key, value) => {\r\n  if (window !== \"undefined\") {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n};\r\n// remove from localstorage\r\nexport const removeLocalStorage = (key) => {\r\n  if (window !== \"undefined\") {\r\n    localStorage.removeItem(key);\r\n  }\r\n};\r\n// authenticate user by passing data to cookie and localstorage during signin\r\n// next is the callback function. You can pass any function to be executed\r\nexport const authenticate = (response, next) => {\r\n  console.log(\"AUTHENTICATE HELPER ON SIGNIN RESPONSE\", response);\r\n  setCookie(\"token\", response.data.token);\r\n  setLocalStorage(\"user\", response.data.user);\r\n  next();\r\n};\r\n// access user info from localstorage\r\nexport const isAuth = () => {\r\n  if (window !== \"undefined\") {\r\n    const cookieChecked = getCookie(\"token\");\r\n\r\n    if (cookieChecked) {\r\n      if (localStorage.getItem(\"user\")) {\r\n        return JSON.parse(localStorage.getItem(\"user\"));\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    return false;\r\n  }\r\n};\r\n\r\n// next is the callback function. You can pass any function to be executed\r\nexport const signout = (next) => {\r\n  removeCookie(\"token\");\r\n  removeLocalStorage(\"user\");\r\n  next();\r\n};\r\n\r\nexport const updateUser = (response, next) => {\r\n  console.log(\"UPDATE USER IN LOCALSTORAGE HELPERS\", response);\r\n  if (typeof window !== \"undefined\") {\r\n    let auth = JSON.parse(localStorage.getItem(\"user\"));\r\n    auth = response.data;\r\n    localStorage.setItem(\"user\", JSON.stringify(auth));\r\n  }\r\n  next();\r\n};\r\n"]},"metadata":{},"sourceType":"module"}